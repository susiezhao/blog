{"data":{"site":{"siteMetadata":{"title":"Blog","author":"susiezhao"}},"markdownRemark":{"id":"f2cb7447-4273-54aa-9e3c-8106caaaeb77","excerpt":"Grafana APP 插件 Grafana APP 插件的目录结构及配置文件 Grafana APP 开发实践 Datasource Plugin 的开发 Datasource 模块 ConfigCtrl 模块","html":"<!-- TOC -->\n<ul>\n<li>\n<p><a href=\"#grafana-app-%E6%8F%92%E4%BB%B6\">Grafana APP 插件</a></p>\n<ul>\n<li><a href=\"#grafana-app-%E6%8F%92%E4%BB%B6%E7%9A%84%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84%E5%8F%8A%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6\">Grafana APP 插件的目录结构及配置文件</a></li>\n<li><a href=\"#grafana-app-%E5%BC%80%E5%8F%91%E5%AE%9E%E8%B7%B5\">Grafana APP 开发实践</a></li>\n<li>\n<p><a href=\"#datasource-plugin-%E7%9A%84%E5%BC%80%E5%8F%91\">Datasource Plugin 的开发</a></p>\n<ul>\n<li><a href=\"#datasource-%E6%A8%A1%E5%9D%97\">Datasource 模块</a></li>\n<li><a href=\"#configctrl-%E6%A8%A1%E5%9D%97\">ConfigCtrl 模块</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<!-- /TOC --\n\n\n# Grafana APP 插件\nGrafana 是一个开源的时序性统计和监控平台，支持例如 elasticsearch、graphite、influxdb 等众多的数据源，并以功能强大的界面编辑器著称，允许您对指标进行查询、可视化展示、设置告警等操作，以及自定义配置仪表盘。 \n\nGrafana 已经拥有一个强大的贡献者和插件开发者社区。开发者社区提供了三种类型的插件： \n- Panel Plugin: 针对图形展示的面板插件；\n- Datasource Plugin: 针对数据源的插件；\n- App Plugin: 针对完整应用的插件，通常由 Panel Plugin，Datasource Plugin 以及 Dashboards 模板组成；\n\n## Grafana APP 插件的目录结构及配置文件\n本文主要介绍的是 App Plugin 的开发过程以及相关的代码组织。基于腾讯云云监控 API 的 Tencent Cloud Monitor App 插件([TencentCloud/tencentcloud-monitor-grafana-app](https://github.com/TencentCloud/tencentcloud-monitor-grafana-app))，主要由两部分组成： Datasource Plugin 和 Dashboards 模板组成，代码的目录结构如下：\n\n```\n.\n├── CHANGELOG.md\n├── LICENSE\n├── README.md\n├── dist                                        // 文件夹，文件夹 src 打包后的代码\n├── package.json\n├── src\n│   ├── components\n│   │   ├── config.html\n│   │   └── config.ts\n│   ├── dashboards                              // Dashboards 典型模板存放\n│   │   ├── example_cdb_dashboard.json\n│   │   └── example_cvm_dashboard.json\n│   ├── datasource                              // Datasource Plguin 代码\n│   │   ├── __mocks__\n│   │   │   └── core_module.ts\n│   │   ├── common\n│   │   │   ├── constants.ts\n│   │   │   └── sign.ts\n│   │   ├── components                          // 自定义的 Angular 组件\n│   │   │   ├── custom_select_dropdown.ts\n│   │   │   └── multi_condition.ts\n│   │   ├── css\n│   │   │   └── query_editor.css\n│   │   ├── config.ctrl.ts                       // ConfigCtrl 模块\n│   │   ├── datasource.ts                        // Datasource 模块\n│   │   ├── query.ctrl.ts                        // QueryCtrl 模块\n│   │   ├── img\n│   │   │   └── tencent-cloud.svg\n│   │   ├── partials                             // Datasource Plugin 中的 html 页面\n│   │   │   ├── config.html                      // config.ctrl.ts 对应的 html\n│   │   │   ├── query.editor.html                // query.ctrl.ts 对应的 html\n│   │   ├── module.ts                            // Datasource Plguin 的 module.ts\n│   │   ├── plugin.json                          // Datasource Plguin 的 module.ts\n│   │   ├── specs                                // 测试用例文件夹\n│   │   │   ├── tc_monitor_cdb_datasource.test.ts\n│   │   │   └── tc_monitor_cvm_datasource.test.ts\n│   │   └── tc_monitor                           // 云监控相关的产品\n│   │       ├── cdb\n│   │       │   ├── datasource.ts\n│   │       │   ├── query.ts\n│   │       │   └── query_def.ts\n│   │       ├── cvm\n│   │       │   ├── datasource.ts\n│   │       │   ├── query.ts\n│   │       │   └── query_def.ts\n│   │       └── index.ts\n│   ├── image                                    // 文件夹，存放README.md 中图片\n│   ├── img\n│   │   └── tencent-cloud.svg\n│   ├── module.ts                                // App Plguin 的 module.ts\n│   └── plugin.json                              // App Plugin 的 plugion.json\n├── jest.config.js                               // jest 框架的配置信息\n├── tsconfig.jest.json\n├── tsconfig.json\n├── tslint.json\n├── webpack.config.analyze.js\n├── webpack.config.js\n└── webpack.config.prod.js\n```\n在插件开发中存在两个重要的配置文件： **plugin.json** 和 **module.ts**。\n- `plugin.json`: 每一个插件中必不可少的文件，用于描述插件的相关信息。在 Grafana 服务启动时会扫描所有的插件文件夹并挂载每个插件的 dist 目录，并查找 `plugin.json` 文件，根据文件的内容完成插件的自动注册。 一个App plugin 的 `plugion.json` 如下：\n\n```json \n/* App Plugin 的 plugin.json */\n{\n  \"type\": \"app\",                                          // 插件的类型： panel | app | datasource\n  \"name\": \"Tencent Cloud Monitor\",                        // 插件名称\n  \"id\": \"tencentcloud-monitor-app\",                       // 插件ID, 必须唯一\n  \"info\": {\n    \"description\": \"Tencent Cloud Monitor App for Grafana\",\n    \"author\": {\n      \"name\": \"Tencent Cloud\"\n    },\n    \"keywords\": [\n      \"tencentcloud\",\n      \"tencentcloudmonitor\",\n      \"grafana\",\n      \"plugins\"\n    ],\n    \"logos\": {\n      \"small\": \"img/tencent-cloud.svg\",\n      \"large\": \"img/tencent-cloud.svg\"\n    },\n    \"version\": \"1.0.0\",\n    \"updated\": \"2019-04-10\"\n  },\n  \"includes\": [                                            // App Plugin 中包含的 Datasource Plugin 和 Dashboards 模板信息\n    {\n      \"type\": \"dashboard\",\n      \"name\": \"【实例】CDB 单机监控\",\n      \"path\": \"dashboards/example_cdb_dashboard.json\"\n    },\n    {\n      \"type\": \"dashboard\",\n      \"name\": \"【实例】CVM 单机监控\",\n      \"path\": \"dashboards/example_cvm_dashboard.json\"\n    },\n    {\n      \"type\": \"datasource\",\n      \"name\": \"Tencent Cloud Monitor Datasource\"\n    }\n  ],\n  \"dependencies\": {\n    \"grafanaVersion\": \"6.0\",\n    \"plugins\": []\n  }\n}\n```\n\nDatasource Plugin 的 `plugin.json` 如下：:\n\n```json \n/* Datasource Plugin 的 plugin.json */\n{\n  \"type\": \"datasource\",\n  \"name\": \"Tencent Cloud Monitor Datasource\",\n  \"id\": \"tencentcloud-monitor-datasource\",\n  \"metrics\": true,                           // Datasource plugin 特有的属性，是否在 panel 中支持 metrics\n  \"annotations\": true,                       // // Datasource plugin 特有的属性，是否在 dashboard 中支持 annotations 查询\n  \"queryOptions\": {\n    \"maxDataPoints\": true\n  },\n  \"routes\": [],\n  \"info\": {\n    \"author\": {\n      \"name\": \"Tencent Cloud\"\n    },\n    \"logos\": {\n      \"small\": \"img/tencent-cloud.svg\",\n      \"large\": \"img/tencent-cloud.svg\"\n    }\n  }\n}\n```\n\n**特别注意**： Datasource Plugin 的 `plugin.json` 配置中必须存在 **metric** 和 **annotations**，且其中至少有一个属性的值为 `true`。\n- `module.ts`：插件的入口文件，决定了插件的具体实现的。根据插件的类型不同其内容也有所差异。 \n\n```javascript \n/* App Plugin 的 module.ts 需要导出1个模块 */\nexport {\n  ConfigCtrl,\n};\n\n/* Datasource Plugin 的 module.ts 通常需要导出5个模块 */\nexport {\n  Datasource,                 // Required\n  ConfigCtrl,                 // Required\n  QueryCtrl,                  // Required\n  AnnotationsQueryCtrl,\n  QueryOptionsCtrl\n};\n```\n\n## Grafana APP 开发实践\n基于腾讯云云监控 API 的 Tencent Cloud Monitor App 完整的结构图如下所示：  \n![Tencent Cloud Monitor App 的结构图](./picture/grafana_app.png)  \n\n在整个应用开发中最为重要的部分是 Datasource Plugin 模块的开发，下面我们以该模块为例详细介绍。\n\n### Datasource Plugin 的开发 \nDatasource 插件中有3个必须的模块：`Datasource`、 `QueryCtrl` 和 `ConfigCtrl`；![完整的 Datasource](./picture/datasource.png)\n\n#### Datasource 模块\n在基于 Tencent Cloud Monitor App 的\n\n#### ConfigCtrl 模块\nConfigCtrl 模块主要用于定义数据源的配置信息，具体页面展示如下： \n![Tencent Cloud Monitor App 的 Datasource Plugin 的数据源配置](./picture/datasource_config.png)  \n```javascript \n/* 文件路径为 /src/datasource/config.ctrl.ts */\nimport * as _ from 'lodash';\nimport { SERVICES } from './tc_monitor';\n\nexport class TCMonitorDatasourceConfigCtrl {\n  static templateUrl = 'datasource/partials/config.html';   // 指定该Controller 对应 View 文件，且实际路径为 /src/datasource/partials/config.html\n  current: any;\n  /** @ngInject */\n  constructor($scope) {\n    this.current.jsonData.services = SERVICES;\n    _.forEach(this.current.jsonData.services, (service) => {\n      this.current.jsonData[service.service] = true;\n    });\n  }\n}\n```\n\n","frontmatter":{"title":"Grafana App 插件开发","date":"May 15, 2019","description":"Grafana App 插件开发"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/grafana/app_develop/","previous":{"fields":{"slug":"/javascript/object_oriented/"},"frontmatter":{"title":"JavaScript 基于原型的面向对象设计"}},"next":null}}